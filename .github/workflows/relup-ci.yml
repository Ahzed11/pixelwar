name: Relup CI

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  versions:
    runs-on: ubuntu-latest

    container:
      image: erlang:26.1.2

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check Tags Existence
      run: |
        if [ -z "$(git tag -l)" ]; then
          echo "No tags found."
          echo "TAGS_EXIST=0" >> $GITHUB_ENV
        else
          echo "Tags found: $(git tag -l)"
          echo "TAGS_EXIST=1" >> $GITHUB_ENV
        fi

    - name: Run validation checks and build releases
      working-directory: erlang
      if: env.TAGS_EXIST == 1
      run: |
        ../scripts/check_versions $(/usr/bin/git log -1 --format='%H') > vsn.log
        cat vsn.log
        cat vsn.log | awk '/Generated appup/ { appup=1 }
                           /relup successfully created!/ { relup=1 }
                           END { if (!appup) { print "appup missing"; exit 1}
                                 if (!relup) { print "relup missing"; exit 1} }'
        OLD=$(cat vsn.log | awk '/OLD:/ {print $2}')
        NEW=$(cat vsn.log | awk '/NEW:/ {print $2}')
        echo "OLD_TAR=$OLD" >> $GITHUB_ENV
        echo "NEW_TAR=$NEW" >> $GITHUB_ENV

      
    - name: Run relup application
      working-directory: erlang
      if: env.TAGS_EXIST == 1
      run: |
        mkdir relupci
        tar -xvf "${{ env.OLD_TAR }}" -C relupci
        # use a simple "run the task in the background" setup #
        GITHUB_TOKEN="${{ secrets.GH_TOKEN }}" GITHUB_URL="https://api.github.com/repos/${{ github.repository }}/releases/" relupci/bin/pixelwar daemon
        TAG=$(echo "${{ env.NEW_TAR }}"  | sed -nr 's/^.*([0-9]+\.[0-9]+\.[0-9]+)\.tar\.gz$/\1/p')
        cp "${{ env.NEW_TAR }}" relupci/releases/
        relupci/bin/pixelwar unpack ${TAG}
        relupci/bin/pixelwar install ${TAG}
        relupci/bin/pixelwar upgrade ${TAG}
        relupci/bin/pixelwar versions
