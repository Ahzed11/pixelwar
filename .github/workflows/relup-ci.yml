name: Relup CI

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  versions:
    runs-on: ubuntu-latest

    container:
      image: erlang:26.1.2
      options: --user 1001

    steps:
    - name: Check if we have tags
      id: check
      uses: ahzed11/has-tags-action@v1.1

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Run validation checks and build releases
      working-directory: erlang
      if: ${{steps.check.outputs.hasTags == 'true'}}
      run: |
        ../scripts/check_versions $(/usr/bin/git log -1 --format='%H') > vsn.log
        cat vsn.log
        cat vsn.log | awk '/Generated appup/ { appup=1 }
                           /relup successfully created!/ { relup=1 }
                           END { if (!appup) { print "appup missing"; exit 1}
                                 if (!relup) { print "relup missing"; exit 1} }'
        OLD=$(cat vsn.log | awk '/OLD:/ {print $2}')
        NEW=$(cat vsn.log | awk '/NEW:/ {print $2}')
        echo "OLD_TAR=$OLD" >> $GITHUB_ENV
        echo "NEW_TAR=$NEW" >> $GITHUB_ENV

      
    - name: Run relup application
      working-directory: erlang
      if: ${{steps.check.outputs.hasTags == 'true'}}
      run: |
        mkdir relupci
        tar -xvf "${{ env.OLD_TAR }}" -C relupci
        MATRIX_WIDTH=128 MATRIX_HEIGHT=128 relupci/bin/pixelwar daemon
        cp "${{ env.NEW_TAR }}" relupci/releases/


        OLD_TAG=$(echo "${{ env.OLD_TAR }}"  | sed -nr 's/^.*([0-9]+\.[0-9]+\.[0-9]+)\.tar\.gz$/\1/p')
        NEW_TAG=$(echo "${{ env.NEW_TAR }}"  | sed -nr 's/^.*([0-9]+\.[0-9]+\.[0-9]+)\.tar\.gz$/\1/p')
        
        echo "Launch before update test"
        ./apps/pixelwar/test/before_update.sh

        relupci/bin/pixelwar unpack ${NEW_TAG}
        relupci/bin/pixelwar install ${NEW_TAG}
        relupci/bin/pixelwar upgrade ${NEW_TAG}
        relupci/bin/pixelwar versions

        echo "Launch after update test"
        ./apps/pixelwar/test/after_update.sh
